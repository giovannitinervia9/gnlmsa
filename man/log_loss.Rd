% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_derivatives.R
\name{log_loss}
\alias{log_loss}
\title{Compute the Negative Log-Likelihood for a Generalized Non-Linear Model}
\usage{
log_loss(y, X, Z, par, npar_mu, loglik, f_mu, f_phi, linkinv_mu, linkinv_phi)
}
\arguments{
\item{y}{Numeric vector of observed responses.}

\item{X}{Numeric matrix of covariates for the mean component.}

\item{Z}{Numeric matrix of covariates for the dispersion component.}

\item{par}{Numeric vector containing all model parameters. The first \code{npar_mu} elements are
assumed to be associated with the mean component, and the remainder with the dispersion component.}

\item{npar_mu}{Integer. Number of parameters associated with the mean component.}

\item{loglik}{Function that computes the observation-wise log-likelihood contributions, as provided by a \verb{gnlmsa_*()} family constructor.}

\item{f_mu}{Function with signature \code{f(X, theta)} computing the nonlinear predictor for the mean component.}

\item{f_phi}{Function with signature \code{f(Z, gamma)} computing the nonlinear predictor for the dispersion component.}

\item{linkinv_mu}{Inverse link function for the mean component (e.g., from \code{\link[=make_link]{make_link()}}).}

\item{linkinv_phi}{Inverse link function for the dispersion component.}
}
\value{
A single numeric value: the negative log-likelihood evaluated at the parameter vector \code{par}.
}
\description{
Evaluates the negative log-likelihood function for a Generalized Non-Linear Model (GNLM)
given a parameter vector and a user-supplied log-likelihood function from a \code{family_gnlmsa} object.
This function is typically used as an objective function in optimization routines.
}
\details{
This function separates the full parameter vector \code{par} into \code{beta} (for the mean)
and \code{gamma} (for the dispersion), computes the predicted mean and dispersion using the
inverse link functions, and then evaluates the log-likelihood. The log-likelihood is returned with a
negative sign for compatibility with minimization algorithms.
}
\examples{
# create family object
fam_gamma <- gnlmsa_Gamma(link_mu = "identity", link_phi = "log")

# create non linear function for mean
cd <- cobb_douglas()
f_mu <- cd$f
J_mu <- cd$J
H_mu <- cd$H

# create non linear function for dispersion
lin <- Linear()
f_phi <- lin$f

# sample size
n <- 100

# covariates for the mean component
X <- cbind(rgamma(n, 1000, 10), rgamma(n, 2000, 5))

# covariates for the variance component
Z <- cbind(1, X)

# parameters for mean component
beta <- c(1, .5, .3)
eta <- f_mu(X, beta)
mu <- fam_gamma$linkinv_mu(eta)

# parameters for dispersion component
gamma <- c(1, .2, -.05)
vi <- f_phi(Z, gamma)
phi <- fam_gamma$linkinv_phi(vi)

# simulate response
y <- rgamma(n, phi, phi/mu)

# compute log_loss
par <- c(beta, gamma)
npar_mu <- length(beta)
log_loss(y, X, Z, par, npar_mu, fam_gamma$loglik,
         f_mu, f_phi, fam_gamma$linkinv_mu, fam_gamma$linkinv_phi)
}
