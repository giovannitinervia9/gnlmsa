% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_derivatives.R
\name{log_loss}
\alias{log_loss}
\title{Compute minus log-likelihood for given values of parameters and a given log-likelihood function of Generalized Non-Linear Models}
\usage{
log_loss(y, X, Z, par, npar_mu, loglik, linkinv_mu, linkinv_phi)
}
\arguments{
\item{y}{numerical vector of response variable.}

\item{X}{matrix containing the covariates for the mean component.}

\item{Z}{matrix containing the covariates for the dispersion component.}

\item{par}{numerical vector containing the parameters to evaluate the \code{loglik()} function at. It contains the parameters for both the mean and dispersion component.}

\item{npar_mu}{integer indicating the number of parameters of the mean component. It is used in order to differentiate between parameters for mean and dispersion component in \code{par}.}

\item{loglik}{a loglikelihood function to evaluate as created my a \code{gnlm_family()} function.}

\item{linkinv_mu}{inverse-link function for the mean component as created by \code{\link[=make_link]{make_link()}}.}

\item{linkinv_phi}{inverse-link function for the dispersion component as created by \code{\link[=make_link]{make_link()}}.}
}
\value{
numerical value of minus log-likelihood evaluated at given values of \code{par}.
}
\description{
Compute minus log-likelihood for given values of parameters and a given log-likelihood function of Generalized Non-Linear Models
}
\examples{
# create family object
fam_gamma <- gnlmsa_Gamma(link_mu = "identity", link_phi = "log")

# create non linear function for mean
cd <- cobb_douglas()
f_mu <- cd$f
J_mu <- cd$J
H_mu <- cd$H

# create non linear function for dispersion
lin <- Linear()
f_phi <- lin$f

# sample size
n <- 100

# covariates for the mean component
X <- cbind(rgamma(n, 1000, 10), rgamma(n, 2000, 5))

# covariates for the variance component
Z <- cbind(1, X)

# parameters for mean component
beta <- c(1, .5, .3)
eta <- f_mu(X, beta)
mu <- fam_gamma$linkinv_mu(eta)

# parameters for dispersion component
gamma <- c(1, .2, -.05)
vi <- f_phi(Z, gamma)
phi <- fam_gamma$linkinv_phi(vi)

# simulate response
y <- rgamma(n, phi, phi/mu)

# compute log_loss
par <- c(beta, gamma)
npar_mu <- length(beta)
log_loss(y, X, Z, par, npar_mu, fam_gamma$loglik, fam_gamma$linkinv_mu, fam_gamma$linkinv_phi)
}
