% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_derivatives.R
\name{hess}
\alias{hess}
\title{Construct the Full Hessian Matrix for a Generalized Non-Linear Model}
\usage{
hess(h_mu, h_phi, h_mu_phi)
}
\arguments{
\item{h_mu}{Hessian matrix of the log-likelihood with respect to the parameters of the mean component.}

\item{h_phi}{Hessian matrix of the log-likelihood with respect to the parameters of the dispersion component.}

\item{h_mu_phi}{Cross-Hessian matrix of the log-likelihood with respect to mean and dispersion parameters.}
}
\value{
A symmetric square matrix of dimension \eqn{(k + p) \times (k + p)}, where:
\itemize{
\item \eqn{k} is the number of parameters in the mean component,
\item \eqn{p} is the number of parameters in the dispersion component.
}
The resulting matrix has the block structure:
\deqn{
\begin{bmatrix}
H_{\beta \beta} & H_{\beta \gamma} \\
H_{\beta \gamma}^\intercal & H_{\gamma \gamma}
\end{bmatrix}
}
}
\description{
Assembles the full Hessian matrix of the log-likelihood function for a Generalized Non-Linear Model (GNLM),
by combining the individual Hessians of the mean and dispersion components along with their cross-derivatives.
}
\details{
This function is useful for second-order optimization methods (e.g., Newton-Raphson),
model diagnostics, or computing standard errors when both components of the model
(mean and dispersion) are estimated jointly.

All inputs must be compatible in dimension and properly computed; no internal checks are performed.
}
\examples{
# create family object
fam_gamma <- gnlmsa_Gamma(link_mu = "identity", link_phi = "log")

# create non linear function for mean
cd <- cobb_douglas()
f_mu <- cd$f
J_mu <- cd$J
H_mu <- cd$H

# create non linear function for dispersion
lin <- Linear()
f_phi <- lin$f
J_phi <- lin$J
H_phi <- lin$H

# sample size
n <- 100

# covariates for the mean component
X <- cbind(rgamma(n, 1000, 10), rgamma(n, 2000, 5))

# covariates for the variance component
Z <- cbind(1, X)

# parameters for mean component
beta <- c(1, .5, .3)
eta <- f_mu(X, beta)
mu <- fam_gamma$linkinv_mu(eta)

# parameters for dispersion component
gamma <- c(1, .2, -.05)
vi <- f_phi(Z, gamma)
phi <- fam_gamma$linkinv_phi(vi)

# simulate response
y <- rgamma(n, phi, phi/mu)

# compute h_mu
h_mu <- hess_mu(y, X, beta, mu, eta, phi,
                f_mu, J_mu, H_mu,
                fam_gamma$mu.eta, fam_gamma$mu2.eta2, fam_gamma$variance)

# compute h_phi
h_phi <- fam_gamma$hess_phi(y, Z, gamma,
                            phi, vi, mu,
                            f_phi, J_phi, H_phi,
                            fam_gamma$phi.vi, fam_gamma$phi2.vi2)

# compute h_mu_phi
h_mu_phi <- fam_gamma$hess_mu_phi(y, X, Z, beta, gamma,
                                  mu, eta, phi, vi,
                                  f_mu, J_mu, f_phi, J_phi,
                                  fam_gamma$mu.eta, fam_gamma$phi.vi)

# build full hessian
hess(h_mu, h_phi, h_mu_phi)
}
