% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper_functions.R
\name{make_jacobian}
\alias{make_jacobian}
\title{Numerical Jacobian with respect to parameters}
\usage{
make_jacobian(f)
}
\arguments{
\item{f}{A function with signature \code{f(X, theta)} that returns a numeric vector.
X typically represents the data (can be a vector or a matrix),
and theta is the parameter vector for which the Jacobian will be computed.}
}
\value{
A function with signature function(X, theta) that computes the Jacobian matrix
of f with respect to theta at the given values. Each row of the resulting Jacobian
corresponds to an element of the output vector, and each column corresponds to
a parameter in theta.
}
\description{
Creates a function that computes the numerical Jacobian of a given function
with respect to its parameter vector. The returned function evaluates the Jacobian
at specified data and parameter values.
}
\details{
The function uses the \code{numDeriv::jacobian()} function to perform numerical differentiation.
The returned Jacobian matrix has dimensions \verb{(length(f(X, theta)), length(theta))}.
}
\examples{
# Example 1: Simple exponential model
f <- function(X, theta) drop(exp(X \%*\% theta))

# Create a Jacobian function
jacobian_fn <- make_jacobian(f)

# Compute the Jacobian for iris data
X <- as.matrix(iris[, 1:4])
theta <- c(0.1, 0.3, -0.2, 0.2)
J <- jacobian_fn(X, theta)
dim(J)  # Should be (nrow(X), length(theta))
}
