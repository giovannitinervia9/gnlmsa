% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gnlmsa_fit.R
\name{gnlmsa_fit}
\alias{gnlmsa_fit}
\title{Fit Generalized Non‑Linear Models via Newton–Raphson Algorithm}
\usage{
gnlmsa_fit(
  y,
  X,
  Z,
  family,
  f_mu,
  J_mu,
  H_mu,
  f_phi,
  J_phi,
  H_phi,
  beta_start,
  gamma_start,
  maxit = 100,
  tol = 1e-05,
  expected = TRUE
)
}
\arguments{
\item{y}{numerical vector of response values.}

\item{X}{design matrix for the mean component.}

\item{Z}{design matrix for the dispersion component.}

\item{family}{a \code{\link{family_gnlmsa}} object.}

\item{f_mu}{predictor function for the mean_component.}

\item{J_mu}{(optional) jacobian of \code{f_mu()}.}

\item{H_mu}{(optional) hessian of \code{f_mu()}.}

\item{f_phi}{predictor function for the dispersion component.}

\item{J_phi}{(optional) jacobian of \code{f_phi()}.}

\item{H_phi}{(optional) hessian of \code{f_phi()}.}

\item{beta_start}{numerical vector of starting values for the parameters of the mean component.}

\item{gamma_start}{numerical vector of starting values for the parameters of the dispersion component.}

\item{maxit}{integer. Maximum number of iterations.}

\item{tol}{convergence tolerance on the parameters (default 1e‑5).}

\item{expected}{logical indicating whether to use the expected (default, \code{expected = TRUE}) or the observed (\code{expected = FALSE}) in the optimization algorithm.}
}
\value{
A list of class \code{"gnlmsa_fit"} with the following components:
\describe{
\item{beta}{Estimated coefficients for the mean component.}
\item{gamma}{Estimated coefficients for the dispersion component.}
\item{loglik}{Final log‑likelihood value.}
\item{eta}{Vector of linear predictors for the mean,
\eqn{\hat{\eta} = \eta(X, \hat{\beta})}.}
\item{mu}{Fitted means, \eqn{\hat{\mu} = g^{-1}(\hat{\eta})}.}
\item{vi}{Vector of linear predictors for the dispersion,
\eqn{\hat{v} = v(Z, \hat{\gamma})}.}
\item{phi}{Fitted dispersion values, \eqn{\hat{\phi} = h^{-1}(\hat{v})}.}
\item{it}{Number of iterations performed.}
\item{maxit, tol}{The stopping criteria that were used.}
}
}
\description{
Simultaneously estimates the mean and dispersion components of a
Generalized Non‑Linear Model (GNLM) by a full Newton–Raphson routine that
relies on the score vector and observed (or, optionally, expected) Hessian
matrix.
Arbitrary non‑linear predictors can be supplied for both components, and
users may optionally provide analytic Jacobians and Hessians to accelerate
convergence.
}
\section{Details}{

The iterative loop stops when the absolute change of every parameter falls
below \code{tol} or when \code{maxit} iterations are reached.
A warning is issued if the log‑likelihood decreases between successive
iterations, but the algorithm continues from the current values.
The required distributional functions (links, variance, score, Hessians and
log‑likelihood) must be provided through a \code{\link{family_gnlmsa}} object.
}

\examples{
\dontrun{
y <- productivity$Y
X <- as.matrix(productivity[, -1])
Z <- cbind(1, prcomp(scale(X))$x[, 1])

sa <- sa_fit(y = y, X = X, Z = Z, family = gnlmsa_Gamma("identity"),
             f_mu = cobb_douglas()$f, J_mu = cobb_douglas()$J,
             H_mu = cobb_douglas()$H,
             f_phi = Linear()$f, J_phi = Linear()$J, H_phi = Linear()$H,
             beta_start = rep(1, 3), lower_mu = rep(0, 3), upper_mu = rep(Inf, 3),
             gamma_start = c(10, 0), lower_phi = rep(-Inf, 2), upper_phi = rep(Inf, 2),
             mult = 1, nsim = 1, sa_control = sa_control(10000), expected = TRUE,
             verbose = TRUE)

gnlmsa_fit(y = y, X = X, Z = Z, family = gnlmsa_Gamma("identity"),
           f_mu = cobb_douglas()$f, J_mu = cobb_douglas()$J,
           H_mu = cobb_douglas()$H,
           f_phi = Linear()$f, J_phi = Linear()$J, H_phi = Linear()$H,
           beta_start = sa$beta, gamma_start = sa$gamma,
           maxit = 100, tol = 1e-05, expected = TRUE)
}
}
