% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/non_linear_models.R
\name{Linear}
\alias{Linear}
\title{Create a Linear Function and its Derivatives}
\usage{
Linear()
}
\value{
A list containing three functions:
\item{f}{The linear function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of covariates
\item \code{theta}: A vector of coefficients
}
}
\item{J}{The Jacobian (first derivatives) function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of covariates
\item \code{theta}: A vector of coefficients
\item \code{y}: Optional; pre-computed output values from the linear function
}
}
\item{H}{The Hessian (second derivatives) function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of covariates
\item \code{theta}: A vector of coefficients
\item \code{y}: Optional; pre-computed output values from the linear function
}
Returns a list of Hessian matrices, one for each observation in \code{X}
}
}
\description{
This function creates a linear function of the form \eqn{f(X, \theta) = X\theta}
and its derivatives (Jacobian and Hessian) for use in optimization, modeling, and statistical analysis.
}
\details{
The linear function implemented here has the following form:
\deqn{f(X, \theta) = X\theta}

Where:
\itemize{
\item \eqn{X} is a matrix of covariates, with each row representing an observation
and each column representing a covariate
\item \eqn{\theta} is a vector of coefficients
\item The function returns a vector of linear combinations, one for each row of \eqn{X}
}

The Jacobian (first derivatives) matrix has the form:
\deqn{J_{ij} = \dfrac{\partial y}{\partial \theta_j} =  X_{ij}}

Where:
\itemize{
\item \eqn{X_{ij}} is the value of covariate \eqn{j} for observation \eqn{i}
}

The Hessian (second derivatives) is a zero matrix of dimension \eqn{k \times k} where \eqn{k} is the number of columns of the \eqn{X} matrix.
}
\examples{
# Create the exponential function
lin_func <- Linear()

# Define covariate data
X <- matrix(c(1, 0.5, 0.2,
              1, 0.8, 0.3,
              1, 0.6, 0.4), ncol = 3, byrow = TRUE)

# Define coefficients
theta <- c(0.1, 0.5, -0.3)

# Calculate linear combinations
y_values <- lin_func$f(X, theta)
y_values

# Calculate Jacobian (first derivatives)
jacobian <- lin_func$J(X, theta)
jacobian

# Calculate Hessian matrices (second derivatives)
hessian_list <- lin_func$H(X, theta)
hessian_list[[1]]  # Hessian matrix for the first observation

}
