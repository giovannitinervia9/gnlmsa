% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/non_linear_models.R
\name{cobb_douglas}
\alias{cobb_douglas}
\title{Create a Cobb-Douglas Production Function and its Derivatives}
\usage{
cobb_douglas()
}
\value{
A list containing three functions:
\item{f}{The Cobb-Douglas production function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of input factors
\item \code{theta}: A vector of parameters where \code{theta[1]} is the efficiency parameter and
\code{theta[2:length(theta)]} are the elasticity parameters for each input factor
}
}
\item{J}{The Jacobian (first derivatives) function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of input factors
\item \code{theta}: A vector of parameters
\item \code{y}: Optional; pre-computed output values from the Cobb-Douglas function
}
}
\item{H}{The Hessian (second derivatives) function. Takes parameters:
\itemize{
\item \code{X}: A matrix or data frame of input factors
\item \code{theta}: A vector of parameters
\item \code{y}: Optional; pre-computed output values from the Cobb-Douglas function
}
Returns a list of Hessian matrices, one for each observation in \code{X}
}
}
\description{
This function creates a Cobb-Douglas production function and its derivatives
(Jacobian and Hessian) for use in optimization and modeling. The Cobb-Douglas
production function is commonly used in economics to represent the relationship
between inputs and output levels.
}
\details{
The Cobb-Douglas production function has the following general form:
\deqn{f(x_i, \theta) = \theta_0 \prod_{j=1}^k x_{ij}^{\intercal \theta_{j}}}

Where:
\itemize{
\item \eqn{x_i^{\intercal}} is the \eqn{i}-th row vector of the matrix of input factors \eqn{X}, with each row representing an observation
and each column representing a input factor
\item \eqn{k} is the number of input factors
\item \eqn{\theta_0} is a scale parameter (efficiency parameter)
\item \eqn{\theta_{j}} are the elasticity parameters for each input factor
\item The function exhibits constant returns to scale when \eqn{\sum_{j=1}^k \theta_j = 1}
}

The Jacobian (first derivatives) matrix has the form:
\deqn{J_{i1} = \dfrac{\partial y_i}{\partial \theta_0} = \dfrac{y_i}{\theta_0}}
\deqn{J_{ij} = \dfrac{\partial y_i}{\partial \theta_j} =  y_i \log(x_{ij}) \text{ for } j = 1, \ldots, k}

Where:
\itemize{
\item \eqn{x_{ij}} is the value of input factor \eqn{j} for the \eqn{i}-th observation
\item \eqn{y} is the output from the Cobb-Douglas function
\item \eqn{k} is the number of input factors
}

The Hessian (second derivatives) matrix for the \eqn{i}-th observation has the form:
\deqn{H_{11} = \dfrac{\partial^2 y_i}{\partial ^2 \theta_0} = 0}
\deqn{H_{1j} = H_{j,1} = \dfrac{\partial ^2y_i}{\partial \theta_0 \partial \theta_j} = \dfrac{y_i}{\theta_0} \log(x_{ij}) \text{ for } j = 1, \ldots, k}
\deqn{H_{jl} = H_{l,j} = \dfrac{\partial ^2 y_i}{\partial \theta_j \partial \theta_l} = y_i \log(x_{ij}) \log(x_{il}) \text{ for } j,l = 1, \ldots, k}
}
\examples{
# Create the Cobb-Douglas function
cd <- cobb_douglas()

# Define input data (labor and capital)
X <- data.frame(labor = c(10, 20, 15), capital = c(50, 40, 60))

# Define parameters: efficiency and elasticities
# theta[1] = efficiency, theta[2] = labor elasticity, theta[3] = capital elasticity
theta <- c(2, 0.6, 0.4)  # Constant returns to scale as 0.6 + 0.4 = 1

# Calculate production output
output <- cd$f(X, theta)
output

# Calculate Jacobian (first derivatives)
jacobian <- cd$J(X, theta)
jacobian

# Calculate Hessian matrices (second derivatives)
hessian_list <- cd$H(X, theta)
hessian_list[[1]]  # Hessian matrix for the first observation

}
