% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_link.R
\name{make_link}
\alias{make_link}
\title{Create a link function object for generalized non-linear models}
\usage{
make_link(link)
}
\arguments{
\item{link}{Character string specifying the link function. Options include:
\itemize{
\item \code{"logit"}: log(p/(1-p))
\item \code{"probit"}: inverse of the standard normal CDF
\item \code{"cauchit"}: inverse of the Cauchy CDF
\item \code{"cloglog"}: log(-log(1-p))
\item \code{"identity"}: no transformation
\item \code{"log"}: natural logarithm
\item \code{"sqrt"}: square root
\item \code{"1/mu^2"}: inverse square
\item \code{"inverse"}: reciprocal
}}
}
\value{
A list with S3 class \code{"link-gnlm"} containing the following components:
\itemize{
\item \code{linkfun}: Function that transforms the mean (mu) to eta
\item \code{linkinv}: Function that transforms eta to the mean (mu)
\item \code{mu.eta}: Function returning the derivative of mu with respect to eta (\eqn{d\mu/d\eta})
\item \code{mu2.eta2}: Function returning the second derivative of mu with respect to eta (\eqn{d^2\mu/d^2\eta^2})
\item \code{valideta}: Function that checks if the eta values are valid
\item \code{name}: Character string naming the link function
}
}
\description{
This function creates a link function object similar to \code{stats::make.link()} but extends it by
including the second derivative of the mean with respect to eta (\code{mu2.eta2}).
This is useful for generalized non-linear models where higher-order derivatives are required.
}
\note{
This function extends \code{stats::make.link()} by including the \code{mu2.eta2} component,
which calculates the second derivative of the mean with respect to eta.
While in standard GLMs eta is typically a linear predictor, in non-linear models eta can be
a non-linear function of the parameters, which is why these functions are particularly useful
for generalized non-linear models.
}
\examples{
# Create a logit link object
logit_link <- make_link("logit")

# Apply link functions to a probability value
mu <- 0.75
eta <- logit_link$linkfun(mu)  # Transform to eta
mu_back <- logit_link$linkinv(eta)  # Transform back to mean

# Calculate derivatives at eta
first_deriv <- logit_link$mu.eta(eta)
second_deriv <- logit_link$mu2.eta2(eta)

}
